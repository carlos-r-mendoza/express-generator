var app = angular.module('ngMyApp', ['ui.router']);

app.config(function ($locationProvider, $urlRouterProvider) {

	// removes # from url
    $locationProvider.html5Mode(true);

    // redirect to 'index' if url does not exist
    $urlRouterProvider.otherwise('/');

});

// Defines our states
app.config(function($stateProvider) {

	// main view 
	$stateProvider
		.state('index', {
			url: '/',
			templateUrl: '/views/index',
			controller: 'MainController'
		})
		// .state('index.friend', {
		// 	// url shows friends name
		// 	url: ':friendName'
		// })
		// .state('index.friend.posts', {
		// 	url: '/posts'
		// })


	// posts views
	$stateProvider
		.state('posts-feed', {
			url: '/posts-feed',
			templateUrl: '/views/posts-feed',
			controller: 'PostsFeedController'
		});
});

'use strict';

app.controller('AuthController', ['$scope', 'Login', function($scope, Login){
	$scope.login = {
		username: '',
		password: ''
	}

	$scope.loginPost = function(credentials) {
		console.log('sedning', credentials)
		Login.post(credentials)
			.then(function(data){
				console.log('returned', data)
			})
	}

}]);


'use strict';

app.controller('MainController', ['$scope', '$state', 'Users', 'Posts', 'Comments', function($scope, $state, Users, Posts, Comments){
		
		$scope.title = 'Sample Social Media Application Using Angular and Express!';

		//search friends
		$scope.search = '';

		//used to toggle ng-class in navigation bar
		$scope.navigation = '';

		//gets all users
		Users.get()
			.then(function(data){
				$scope.users = data;
			});

		//message displayed in profile/posts section when page is first loaded
		$scope.welcome_message = true;

		// defines user when toggleProfile is triggered
		$scope.user;

		//gets user's posts when view profile button is clicked
		$scope.toggleProfile = function(user) {

			$scope.user = user;

			//modifies view
			$scope.welcome_message = false;
			$scope.profile_posts = false;
			$scope.profile_details = true;
			//populates user details
			$scope.user_details = user;
			var friendName = user.name.replace(/\s/g, '-');

			$scope.selected_user = user.name;

			console.log('name', user.name)
			//$state.go('index.friend', { friendName: friendName});
		} 

		//profile button logic
		$scope.showUserProfile = function() {
			$scope.profile_posts = false;


			$scope.profile_details = true;
		}

		//posts button logic
		$scope.showUserPosts = function() {
			$scope.profile_details = false;


			//gets user's posts
			Posts.getByUserId($scope.user.id)
				.then(function(data){
					$scope.user_posts = data;
				})

			$scope.profile_posts = true;
			// $state.go('index.friend.posts');


		}

		//gets post's comments when see comments button is clicked
		$scope.togglePostComments = function(post) {
			Comments.getByPostId(post.id)
				.then(function(data){
					post.comments = data;
				})
		}

	}]);

'use strict';

app.controller('PostsFeedController', ['$scope', '$state', 'Posts', function($scope, $state, Posts){
		
		Posts.get()
			.then(function(data){
				$scope.all_posts = data;
			});

	}]);

'use strict';

app.factory('APIConfig', [function() {
	
	return {
		devRoot: 'http://jsonplaceholder.typicode.com',
		prodRoot: '',
		env: 'dev',
		setEnv: function() {

		},
		getRoot: function() {
			if(this.env === 'dev') { //this object
				return this.devRoot;
			} else if (this.env === 'prod') {
				return this.prodRoot;
			}
		}
	}
}]);

app.factory('Users', ['$http', 'APIConfig', function($http, APIConfig){
	
	return {
		//gets all users		
		get: function() {
			return $http.get(APIConfig.getRoot() + '/users')
					.then(function(response){
						return response.data;
					})
		}
	};	
}]);

app.factory('Posts', ['$http', 'APIConfig', function($http, APIConfig){
	
	return {
		//gets all posts
		get: function() {
			return $http.get(APIConfig.getRoot() + '/posts')
					.then(function(response){
						return response.data;
					});
		},
		//gets user's posts using user.id
		getByUserId: function(userId) {
			console.log('id', userId)
			return $http.get(APIConfig.getRoot() + '/posts?userId=' + userId)
					.then(function(response){
						console.log('fad',response.data)
						return response.data;
					});
		}
	};
}]);

app.factory('Comments', ['$http', 'APIConfig', function($http, APIConfig){
	
	return {
		//gets all comments
		get: function() {
			return $http.get(APIConfig.getRoot() + '/comments/')
					.then(function(response){
						return response.data;
					})
		},
		//gets post's comments using post.id
		getByPostId: function(postId) {
			return $http.get(APIConfig.getRoot() + '/comments?postId=' + postId)
					.then(function(response){
						return response.data;
					})			
		}
	}
}]);

app.factory('Login', ['$http', function($http){
	
	return {
		//gets all users		
		post: function(credentials) {
			return $http.post('/login', credentials)
					.then(function(response){
						return response.data;
					})
		}
	};	
}]);
