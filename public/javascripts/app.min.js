var app = angular.module('ngMyApp', ['ui.router']);

app.config(function ($locationProvider, $urlRouterProvider) {

    $locationProvider.html5Mode(true);

    $urlRouterProvider.otherwise('/');

});

// Defines our states
app.config(function($stateProvider) {

	$stateProvider
		.state('index', {
			url: '/',
			templateUrl: '/views/index',
			controller: 'MainController'
		});


	// posts views
	$stateProvider
		.state('posts', {
			url: '/posts',
			templateUrl: '/views/posts_feed',
			controller: 'MainController'
		});

});

'use strict';

app.controller('MainController', ['$scope', 'Users', 'Posts', 'Comments', 'Tests', function($scope, Users, Posts, Comments, Tests){
		
		$scope.title = 'Sample Social Media Application Using Angular and Express!';
		
		//get html from backend test
		Tests.get()
			.then(function(data) {
				console.log('test data', data)
				$scope.htmlcontent = data;
			});		

		//gets all users
		Users.get()
			.then(function(data){
				$scope.users = data;
			});

		// gets all posts
		Posts.get()
			.then(function(data){
				$scope.all_posts = data;
			});

		//message displayed in profile/posts section when page is first loaded
		$scope.welcome_message = true;

		//gets user's posts when view profile button is clicked
		$scope.toggleProfile = function(user) {
			//modifies view
			$scope.welcome_message = false;
			$scope.profile_posts = false;
			$scope.profile_details = true;
			//populates user details
			$scope.user_details = user;
			//gets user's posts
			Posts.getByUserId(user.id)
				.then(function(data){
					$scope.user_posts = data;
				})
		} 

		//profile button logic
		$scope.showUserProfile = function() {
			$scope.profile_posts = false;
			$scope.profile_details = true;
		}

		//posts button logic
		$scope.showUserPosts = function() {
			$scope.profile_details = false;
			$scope.profile_posts = true;
		}

		//gets post's comments when see comments button is clicked
		$scope.togglePostComments = function(post) {
			Comments.getByPostId(post.id)
				.then(function(data){
					post.comments = data;
				})
		}

	}]);

'use strict';





app.factory('APIConfig', [function() {
	
	return {
		devRoot: 'http://jsonplaceholder.typicode.com',
		prodRoot: '',
		env: 'dev',
		setEnv: function() {

		},
		getRoot: function() {
			if(this.env === 'dev') { //this object
				return this.devRoot;
			} else if (this.env === 'prod') {
				return this.prodRoot;
			}
		}
	}
}]);

app.factory('Tests', ['$http', function($http){
	
	return {
		//gets all users		
		get: function() {
			return $http.get('/page')
					.then(function(response){
						console.log('inside test', response)
						return response.data;
					})
		}
	};	
}]);

app.factory('Users', ['$http', 'APIConfig', function($http, APIConfig){
	
	return {
		//gets all users		
		get: function() {
			return $http.get(APIConfig.getRoot() + '/users')
					.then(function(response){
						return response.data;
					})
		}
	};	
}]);

app.factory('Posts', ['$http', 'APIConfig', function($http, APIConfig){
	
	return {
		//gets all posts
		get: function() {
			return $http.get(APIConfig.getRoot() + '/posts')
					.then(function(response){
						return response.data;
					});
		},
		//gets user's posts using user.id
		getByUserId: function(userId) {
			console.log('id', userId)
			return $http.get(APIConfig.getRoot() + '/posts?userId=' + userId)
					.then(function(response){
						console.log('fad',response.data)
						return response.data;
					});
		}
	};
}]);

app.factory('Comments', ['$http', 'APIConfig', function($http, APIConfig){
	
	return {
		//gets all comments
		get: function() {
			return $http.get(APIConfig.getRoot() + '/comments/')
					.then(function(response){
						return response.data;
					})
		},
		//gets post's comments using post.id
		getByPostId: function(postId) {
			return $http.get(APIConfig.getRoot() + '/comments?postId=' + postId)
					.then(function(response){
						return response.data;
					})			
		}
	}
}]);

'use strict';

app.filter('postsUsers', function() {
	return function(posts) {
		return posts.filter(function(post){
			return post.userId === 5;
		});
	}
});